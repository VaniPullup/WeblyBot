import asyncio
import logging

from aiogram import Bot, Dispatcher, F
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State
from aiogram.types import Message, CallbackQuery, ReplyKeyboardMarkup, KeyboardButton

from config import BOT_TOKEN, ADMIN_ID
from db import init_db, add_rating
from states.form_states import FormStates
from keyboards.menu import back_to_main_kb, main_kb

from handlers import form
from handlers.admin import admin_router
from handlers.courses import show_courses, course_callback_handler, courses_router
from handlers.faq import faq_router
from ratings import ratings_router
from handlers.dialog import dialog_router

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
bot.admin_id = ADMIN_ID
dp = Dispatcher()

# üîΩ –ü–æ–¥–∫–ª—é—á–∞–µ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
dp.include_router(faq_router)
dp.include_router(admin_router)
dp.include_router(ratings_router)
dp.include_router(courses_router)
dp.include_router(dialog_router)


# –°—Ç–∞—Ä—Ç
@dp.message(F.text == "/start")
async def cmd_start(message: Message):
    await message.answer(
        "<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ WeblyBot!</b>\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.",
        reply_markup=main_kb,
        parse_mode="HTML"
    )


# –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
@dp.message(F.text == "üì© –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")
async def start_blank_form(message: Message, state: FSMContext):
    await state.update_data(course="‚Äî –±–µ–∑ –≤—ã–±–æ—Ä–∞ ‚Äî")
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è:", reply_markup=back_to_main_kb)
    await state.set_state(FormStates.name)


# –ö—É—Ä—Å—ã
@dp.message(F.text == "üßë‚Äçüè´ –ö—É—Ä—Å—ã")
async def open_courses(message: Message, state: FSMContext):
    await show_courses(message, state)


@dp.callback_query(F.data.startswith("enroll_"))
async def cb_course(callback: CallbackQuery, state: FSMContext):
    await course_callback_handler(callback, state)


# –ù–∞–∑–∞–¥ –∏–∑ –ª—é–±–æ–≥–æ –º–µ—Å—Ç–∞
@dp.message(F.text == "üîô –ù–∞–∑–∞–¥")
async def back_to_menu(message: Message, state: FSMContext):
    await form.handle_back_button(message, state)


# –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π)
@dp.message(F.text == "üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
@dp.message(State("*"), F.text == "üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
async def back_any_state(message: Message, state: FSMContext):
    await form.handle_form_cancel(message, state)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —à–∞–≥–æ–≤ —Ñ–æ—Ä–º—ã
@dp.message(FormStates.name)
@dp.message(FormStates.phone)
@dp.message(FormStates.comment)
async def process_form_states(message: Message, state: FSMContext):
    await form.handle_form_input(message, state, ADMIN_ID)


# –û –∫–æ–º–ø–∞–Ω–∏–∏
@dp.message(F.text == "‚ÑπÔ∏è –û –∫–æ–º–ø–∞–Ω–∏–∏")
async def about_company(message: Message):
    await message.answer(
        "<b>üìå –û –∫–æ–º–ø–∞–Ω–∏–∏ Webly</b>\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Webly ‚Äî —Ü–∏—Ñ—Ä–æ–≤—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É, —Å–æ–∑–¥–∞–Ω–Ω—É—é —Å –∏–¥–µ–µ–π <i>–¥–µ–ª–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ –ø–æ–Ω—è—Ç–Ω—ã–º, "
        "–∞ IT-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã ‚Äî –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏</i>.\n\n"
        "üß© <b>–ß—Ç–æ –º—ã –¥–µ–ª–∞–µ–º:</b>\n"
        "‚Äî –ü–æ–º–æ–≥–∞–µ–º –æ—Å–≤–æ–∏—Ç—å Python, Telegram-–±–æ—Ç–æ–≤ –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –Ω—É–ª—è.\n"
        "‚Äî –†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º Telegram-—Ä–µ—à–µ–Ω–∏—è –ø–æ–¥ –∫–ª—é—á.\n"
        "‚Äî –î–µ–ª–∞–µ–º –∞–∫—Ü–µ–Ω—Ç –Ω–∞ <u>–ø—Ä–∞–∫—Ç–∏–∫–µ –∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –∫–µ–π—Å–∞—Ö</u>.\n\n"
        "üéì <b>–ö–æ–º—É –ø–æ–¥–æ–π–¥—ë—Ç:</b>\n"
        "‚Äî –ù–∞—á–∏–Ω–∞—é—â–∏–º, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –≤–æ–π—Ç–∏ –≤ IT.\n"
        "‚Äî –ë–∏–∑–Ω–µ—Å—É, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏ —Ü–∏—Ñ—Ä–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è.\n"
        "‚Äî –¢–µ–º, –∫—Ç–æ —Ü–µ–Ω–∏—Ç <i>—Å—Ç—Ä—É–∫—Ç—É—Ä—É, –∫—Ä–∞—Å–æ—Ç—É –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç</i>.\n\n"
        "ü§ù <b>–ü–æ—á–µ–º—É –Ω–∞–º –¥–æ–≤–µ—Ä—è—é—Ç:</b>\n"
        "‚úì –ü—Ä—è–º–æ–π –ø–æ–¥—Ö–æ–¥ ‚Äî –±–µ–∑ –≤–æ–¥—ã –∏ –±–µ—Å–ø–æ–ª–µ–∑–Ω–æ–π —Ç–µ–æ—Ä–∏–∏.\n"
        "‚úì –£–≤–∞–∂–µ–Ω–∏–µ –∫ –∫–∞–∂–¥–æ–º—É —É—á–µ–Ω–∏–∫—É.\n"
        "‚úì –ß–µ—Å—Ç–Ω–æ—Å—Ç—å, –≤–∏–∑—É–∞–ª—å–Ω—ã–π –≤–∫—É—Å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ.\n\n"
        "üìû <b>–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è:</b>\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>¬´üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É¬ª</b> –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é ‚Äî –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º –ª–∏—á–Ω–æ.\n\n"
        "<i>Webly ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ –æ–±—É—á–µ–Ω–∏–µ. –≠—Ç–æ —ç—Å—Ç–µ—Ç–∏–∫–∞. –≠—Ç–æ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º. –≠—Ç–æ —Ç—ã, —Ä–∞—Å—Ç—É—â–∏–π —Å –∫–∞–∂–¥—ã–º —à–∞–≥–æ–º.</i>\n\n"
        "‚Äî –° –∑–∞–±–æ—Ç–æ–π,\n<b>Webly Team</b> üíô",
        parse_mode="HTML"
    )


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ—Ü–µ–Ω–∫–∞–º–∏
rating_kb = ReplyKeyboardMarkup(
    keyboard=[[
        KeyboardButton(text="‚≠êÔ∏è 1"), KeyboardButton(text="‚≠êÔ∏è 2"),
        KeyboardButton(text="‚≠êÔ∏è 3"), KeyboardButton(text="‚≠êÔ∏è 4"),
        KeyboardButton(text="‚≠êÔ∏è 5")
    ]],
    resize_keyboard=True,
    one_time_keyboard=True
)


# –ö–æ–º–∞–Ω–¥–∞ /–æ—Ü–µ–Ω–∏—Ç—å
@dp.message(F.text == "/–æ—Ü–µ–Ω–∏—Ç—å")
async def rate_bot(message: Message):
    await message.answer("–û—Ü–µ–Ω–∏ —Ä–∞–±–æ—Ç—É –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –ø–æ –ø—è—Ç–∏–±–∞–ª–ª—å–Ω–æ–π —à–∫–∞–ª–µ:", reply_markup=rating_kb)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ü–µ–Ω–∫–∏
@dp.message(F.text.regexp(r"‚≠êÔ∏è [1-5]"))
async def handle_rating(message: Message):
    rating = int(message.text[-1])
    add_rating(message.from_user.id, rating)
    await message.answer(f"–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ—é –æ—Ü–µ–Ω–∫—É: {rating} ‚≠êÔ∏è", reply_markup=main_kb)


# –ó–∞–ø—É—Å–∫
async def main():
    logging.basicConfig(level=logging.INFO)
    init_db()
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
